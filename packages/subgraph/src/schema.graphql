enum ActivityEventType {
  StreamWithdrawEvent,
  StreamDepositEvent
}

type Organization @entity {
  id: ID!
  owner: Bytes!
  orgName: String!
  createdAt: BigInt!
  streamActivities: [StreamActivity!]! @derivedFrom(field: "organization")
  streams: [UserOrganization!]! @derivedFrom(field: "organization")
}

type User @entity {
  id: ID!
  user: Bytes!
  createdAt: BigInt!
  organizations: [UserOrganization!] @derivedFrom(field: "user")
}

type UserOrganization @entity {
  id: ID! # set to `user.id.concat(organization.id)`
  user: User!
  organization: Organization!
  streamName: String!
  creator: Bytes!
}

type StreamActivity @entity {
  id: ID!
  user: User!
  organization: Organization!
  eventType: ActivityEventType!
  actor: Bytes!
  amount: BigInt!
  info: String!
  createdAt: BigInt!
}